package {{ .package_name }}

import (
	"ditigram_iot_backend/app/models"
	"ditigram_iot_backend/app/utils/uid"
	"fmt"

	"gorm.io/gorm"
)

// Update{{ .name }} æ›´æ–°{{ .name_zh }}
func Update{{ .name }}(req models.{{ .name }}UpdateReq) error {
	updateMap := map[string]interface{}{
        {{ range split .fields "," }}{{ $attrList := split . ":" }}"{{ index $attrList 2 }}": req.{{ index $attrList 0 }},
        {{ end }}
	}
	err := models.DB.Model(&models.{{ .name }}{}).Where(
		"{{ .name_underline  }}_no = ? AND {{ .name_underline }}_status = ?",
		req.{{ .name }}NO, models.{{ .name }}StatusNormal,
	).Updates(updateMap).Error
	if err != nil {
		return fmt.Errorf("update failed -> %w", err)
	}
	return nil
}
